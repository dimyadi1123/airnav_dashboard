#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#

library(shiny)
library(ggplot2)

# Define UI for application that draws a histogram
ui <- fluidPage(

    # Application title
    titlePanel("Old Faithful Geyser Data"),

    # Sidebar with a slider input for number of bins 
    sidebarLayout(
        sidebarPanel(
            sliderInput("bins",
                        "Number of bins:",
                        min = 1,
                        max = 50,
                        value = 30)
        ),

        # Show a plot of the generated distribution
        mainPanel(
           plotOutput("distPlot")
        )
    )
)

# Define server logic required to draw a histogram
server <- function(input, output) {

    output$distPlot <- renderPlot({
    # generate bins based on input$bins from ui.R
    x    <- faithful[, 2]
    bins <- seq(min(x), max(x), length.out = input$bins + 1)
    
    # Create the histogram data
    hist_data <- hist(x, breaks = bins, plot = FALSE)
    
    # Create data frame for ggplot
    data <- data.frame(
        mids = hist_data$mids,
        counts = hist_data$counts
    )
    
    # Plot with ggplot2
    ggplot(data, aes(x = mids, y = counts)) +
        geom_bar(stat = 'identity', fill = 'darkgray', color = 'white') +
        geom_text(aes(label = counts), vjust = -0.5) +  # Add count labels
        labs(
            title = 'Histogram of waiting times',
            x = 'Waiting time to next eruption (in mins)',
            y = 'Frequency'
        )
})
}

# Run the application 
shinyApp(ui = ui, server = server)
